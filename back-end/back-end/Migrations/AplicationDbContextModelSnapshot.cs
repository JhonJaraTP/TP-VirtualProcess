// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back_end;

namespace back_end.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    partial class AplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("back_end.Models.DataBisness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id_PersonalData")
                        .HasColumnType("int");

                    b.Property<string>("NameBusiness")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name_KindOfPerson")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name_Municipality")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("DataBisness");
                });

            modelBuilder.Entity("back_end.Models.KindOfPerson", b =>
                {
                    b.Property<string>("Name_KindOfPerson")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Name_KindOfPerson");

                    b.ToTable("KindOfPerson");
                });

            modelBuilder.Entity("back_end.Models.Municipality", b =>
                {
                    b.Property<string>("Municipalitys")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Municipalitys");

                    b.ToTable("Municipality");
                });

            modelBuilder.Entity("back_end.Models.PersonalData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("AuthorizeEmail")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AuthorizePhone")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstLastName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NameBusiness")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name_Type_Document")
                        .HasColumnType("varchar(40)");

                    b.Property<int>("NumberDocument")
                        .HasColumnType("int");

                    b.Property<string>("SecondLastName")
                        .HasColumnType("varchar(20)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("PersonalData");
                });

            modelBuilder.Entity("back_end.Models.TypeDocument", b =>
                {
                    b.Property<string>("Name_Type_Document")
                        .HasColumnType("varchar(40)");

                    b.HasKey("Name_Type_Document");

                    b.ToTable("TypeDocument");
                });
#pragma warning restore 612, 618
        }
    }
}
